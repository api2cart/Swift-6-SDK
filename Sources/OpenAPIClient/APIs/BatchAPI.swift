//
// BatchAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

open class BatchAPI {

    /**
     batch.job.list
     
     - parameter count: (query) This parameter sets the entity amount that has to be retrieved. Max allowed count&#x3D;250 (optional, default to 10)
     - parameter pageCursor: (query) Used to retrieve entities via cursor-based pagination (it can&#39;t be used with any other filtering parameter) (optional)
     - parameter ids: (query) Filter batch jobs by ids (optional)
     - parameter createdFrom: (query) Retrieve entities from their creation date (optional)
     - parameter createdTo: (query) Retrieve entities to their creation date (optional)
     - parameter processedFrom: (query) Retrieve entities according to their processing datetime (optional)
     - parameter processedTo: (query) Retrieve entities according to their processing datetime (optional)
     - parameter responseFields: (query) Set this parameter in order to choose which entity fields you want to retrieve (optional, default to "{return_code,return_message,pagination,result}")
     - parameter apiConfiguration: The configuration for the http request.
     - returns: ModelResponseBatchJobList
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func batchJobList(count: Int? = nil, pageCursor: String? = nil, ids: String? = nil, createdFrom: String? = nil, createdTo: String? = nil, processedFrom: String? = nil, processedTo: String? = nil, responseFields: String? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) -> ModelResponseBatchJobList {
        return try await batchJobListWithRequestBuilder(count: count, pageCursor: pageCursor, ids: ids, createdFrom: createdFrom, createdTo: createdTo, processedFrom: processedFrom, processedTo: processedTo, responseFields: responseFields, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     batch.job.list
     - GET /batch.job.list.json
     - Get list of recent jobs
     - API Key:
       - type: apiKey x-store-key (HEADER)
       - name: StoreKeyAuth
     - API Key:
       - type: apiKey x-api-key (HEADER)
       - name: ApiKeyAuth
     - parameter count: (query) This parameter sets the entity amount that has to be retrieved. Max allowed count&#x3D;250 (optional, default to 10)
     - parameter pageCursor: (query) Used to retrieve entities via cursor-based pagination (it can&#39;t be used with any other filtering parameter) (optional)
     - parameter ids: (query) Filter batch jobs by ids (optional)
     - parameter createdFrom: (query) Retrieve entities from their creation date (optional)
     - parameter createdTo: (query) Retrieve entities to their creation date (optional)
     - parameter processedFrom: (query) Retrieve entities according to their processing datetime (optional)
     - parameter processedTo: (query) Retrieve entities according to their processing datetime (optional)
     - parameter responseFields: (query) Set this parameter in order to choose which entity fields you want to retrieve (optional, default to "{return_code,return_message,pagination,result}")
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<ModelResponseBatchJobList> 
     */
    open class func batchJobListWithRequestBuilder(count: Int? = nil, pageCursor: String? = nil, ids: String? = nil, createdFrom: String? = nil, createdTo: String? = nil, processedFrom: String? = nil, processedTo: String? = nil, responseFields: String? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<ModelResponseBatchJobList> {
        let localVariablePath = "/batch.job.list.json"
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "count": (wrappedValue: count?.encodeToJSON(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "page_cursor": (wrappedValue: pageCursor?.encodeToJSON(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "ids": (wrappedValue: ids?.encodeToJSON(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "created_from": (wrappedValue: createdFrom?.encodeToJSON(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "created_to": (wrappedValue: createdTo?.encodeToJSON(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "processed_from": (wrappedValue: processedFrom?.encodeToJSON(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "processed_to": (wrappedValue: processedTo?.encodeToJSON(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "response_fields": (wrappedValue: responseFields?.encodeToJSON(codableHelper: apiConfiguration.codableHelper), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ModelResponseBatchJobList>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true, apiConfiguration: apiConfiguration)
    }

    /**
     batch.job.result
     
     - parameter id: (query) Entity id 
     - parameter apiConfiguration: The configuration for the http request.
     - returns: ResponseBatchJobResult
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func batchJobResult(id: String, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) -> ResponseBatchJobResult {
        return try await batchJobResultWithRequestBuilder(id: id, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     batch.job.result
     - GET /batch.job.result.json
     - Get job result data
     - API Key:
       - type: apiKey x-store-key (HEADER)
       - name: StoreKeyAuth
     - API Key:
       - type: apiKey x-api-key (HEADER)
       - name: ApiKeyAuth
     - parameter id: (query) Entity id 
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<ResponseBatchJobResult> 
     */
    open class func batchJobResultWithRequestBuilder(id: String, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<ResponseBatchJobResult> {
        let localVariablePath = "/batch.job.result.json"
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "id": (wrappedValue: id.encodeToJSON(codableHelper: apiConfiguration.codableHelper), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResponseBatchJobResult>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true, apiConfiguration: apiConfiguration)
    }
}
